<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="locationLinkTileTemplate.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rFn/AURDejhrVryMAAAAAElFTkSuQmCC
</value>
  </data>
</root>