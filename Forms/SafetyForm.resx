<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="locationLinkTileTemplate.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>